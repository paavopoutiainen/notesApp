{"version":3,"sources":["components/Note.js","components/Header.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Header","getAll","axios","get","then","response","data","create","newObject","post","console","log","update","id","put","Notification","message","Footer","App","useState","notesAsState","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","length","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","filter","notesToShow","key","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ae619b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\nconst label = note.important\r\n  ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick ={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from \"react\"\r\n\r\nfunction Header() {\r\n    return <div className=\"header\">\r\n        \r\n\r\n    </div>\r\n}\r\nexport default Header","import axios from \"axios\"\r\nconst baseUrl = \"/api/notes\"\r\n\r\n/*const getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data)\r\n}*/\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    \r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => {\r\n        console.log(\"createStuff\",response)\r\n        return response.data}\r\n        )\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update\r\n}","import React from \"react\"\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null){\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from \"react\"\r\n\r\nconst Footer = () =>{\r\n    const footerStyle = {\r\n        color:\"green\",\r\n        fontStyle: \"italic\",\r\n        fontSixe: 16\r\n    }\r\n\r\n\r\n    return <div>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n    </div>\r\n}\r\n\r\nexport default Footer","\nimport React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport Header from \"./components/Header\"\nimport noteService from \"./services/notes\"\nimport Notification from \"./components/Notification\"\nimport Footer from \"./components/Footer\"\nimport { EIDRM } from 'constants'\n\nfunction App() {\n    const [notesAsState, setNotes] = useState([])\n    const [newNote, setNewNote] = useState(\"\")\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        noteService\n          .getAll()\n          .then(initialNotes => {\n            setNotes(initialNotes)\n          })\n      }, [])\n    console.log(\"render\", notesAsState.length, \"notes\")\n\n    const toggleImportanceOf = id => {\n        \n        const url = `http://localhost:3001/notes/${id}`\n        const note = notesAsState.find(n => n.id === id)\n        const changedNote = {...note, important: !note.important}\n\n\n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notesAsState.map(n => n.id !== id ? n : returnedNote))\n            })\n            .catch(error =>{\n                setErrorMessage(\n                    `Note \"${note.content}\" was already removed from server`\n                )\n                setTimeout(() =>{\n                    setErrorMessage(null)\n                }, 5000)\n                    setNotes(notesAsState.filter(n => n.id !== id))\n            })\n        \n    }\n\n    const rows = () => {\n      let noteElements = notesToShow.map((note)=> {\n       \n          return <Note\n          key = {note.id}\n          note = {note}\n          toggleImportance = {() => toggleImportanceOf(note.id)}/>\n    })\n      //console.log(\"mapped notes is:\", noteElements[0])\n      \n      return noteElements;\n  }\n    function addNote(event) {\n        event.preventDefault()\n        console.log(\"button clicked\", event.target)\n        const noteObject = {\n            \n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5\n        }\n       \n        noteService\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notesAsState.concat(returnedNote))\n                setNewNote(\"\")\n            })\n\n    }\n    const handleNoteChange = (event) => {\n        console.log(\"eventti on: \", event)\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const notesToShow = showAll \n        ? notesAsState \n        : notesAsState.filter((note) => note.important)\n\n\n  return (\n      <div>\n          <Header/>\n          <h1>Notes</h1>\n\n          <Notification message= {errorMessage}/>\n\n          <div>\n              <button onClick={() => setShowAll(!showAll)}>\n                  show {showAll ? \"important\" : \"all\"}\n              </button>\n          </div>\n          <ul>\n              {rows()}\n          </ul>\n          <form onSubmit = {addNote}>\n              <input value = {newNote} onChange={handleNoteChange}/>\n              <button type = \"submit\">Save</button>\n          </form>\n          <Footer/>\n      </div>\n  )\n\n}\n\nexport default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n//TyyppiTaulu\n{\n    \"TyyppiID\": 1(Number)\n    \"Tyyppi\": (avoin, monivalinta, suotittelu)\n}\n\n//kysely\n{\n    \"kyselyID\": 1(Number),\n    \"kysymykset\": [\n        {\n            \"id\": 1(Number),\n            \"kysymyksenTeksti\": \"oliko hyvää ruokaaaa\"(String),\n            \"tyyppiID\": \"2\"(Number),\n            \"kyselyID\":1(Number),\n            \"aktiivinen\": true(Boolean)\n        },\n        {\n            \"id\": 2(Number),\n            \"kysymyksenTeksti\": \"oliko valkoist maitoa\"(String),\n            \"tyyppiID\": \"2\"(Number),\n            \"kyselyID\":1(Number),\n            \"aktiivinen\": true(Boolean)\n        },\n        {\n            \"id\": 3(Number),\n            \"kysymyksenTeksti\": \"oliko hyvää salaattia \"(String),\n            \"tyyppiID\": \"2\"(Number),\n            \"kyselyID\":1(Number),\n            \"aktiivinen\": true(Boolean)\n        }\n    ],\n    \"aktiivinen\": true(Boolean),\n    \"luojaId\": 1,\n    \"luontiPvm\":date,\n    \"muokkausppvm\": date \n}\n\n//kysymys\nkysymys_vastaus : kysymysID, vastausID\nkysymys 1 : \nvastaus on kyllä/EI\n{\n    {\n        \"id\"\n    }\n}\n\n//vastaus\n{\n    \"VastausId\": 1(number),\n    \"Vastaus\" Kyllä \n}\n*/","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./index.css\"\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}